# #!/usr/bin/python
snippet #!
	#!/bin/env python

snippet for
	for ${1:each} in ${2:collection}:
		${3:pass}
snippet if
	if ${1:condition}:
		${2:pass}
# While
snippet wh
	while ${1:condition}:
		${2:# code...}
# New Class
snippet cl
	class ${1:ClassName}(${2:object}):
		def __init__(self, ${3}):
			${4:super($1, self).__init__()}
			${5}
snippet clt
	class ${1:ClassName}Test(${2:unittest.TestCase}):
		${3}
snippet deft
	def test_${1:scenario}_${2:expected_behaviour}(self):
		${3}
# New Function
snippet def
	def ${1:fname}(${2:`indent('.') ? 'self' : ''`}):
		${3:pass}
# New Property
snippet property
	def ${1:foo}():
		doc = \"${2:The $1 property.}\"
		def fget(self):
				${3:return self._$1}
		def fset(self, value):
			
# Self
snippet .
	self.
# Try/Except
snippet try
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
# Try/Except/Else
snippet trye
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
# Try/Except/Finally
snippet tryf
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	finally:
		${5:pass}
# Try/Except/Else/Finally
snippet tryef
	try:
		${1:pass}
	except ${2:Exception}, ${3:e}:
		${4:raise $3}
	else:
		${5:pass}
	finally:
		${6:pass}
# if __name__ == '__main__':
snippet ifmain
	def main():
		${1:pass}


	if __name__ == '__main__':
		main()
snippet ctor
	def __init__(self${1}):
		${2}
snippet kv
	'${1:key}' : '${2:value}',
snippet isstr
	type(${1}) in types.StringTypes${2}
